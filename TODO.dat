1. сделать тесты на дефрагментацию с плохим хэшэм
2. пофиксить тест с очень плохим хэшэм
3. self.deleted_sectors кривой

class BadHashMock:
    def __init__(self, key):
        pass

    def hexdigest(self):
        return str(1)

@patch('kvstorage.md5', new=BadHashMock)
    def test_collisions_with_bad_hash_add_delete(self):
        self.check = {}
        self.check2 = {}
        amount_pairs = random.randint(200, 500)
        repeat_check = random.randint(2, 2)
        for pair in range(amount_pairs):
            key = ''.join(random.choice(string.ascii_letters)
                          for _ in range(random.randint(10, 20)))
            value = ''.join(random.choice(string.ascii_letters)
                            for _ in range(random.randint(10, 20)))
            if pair % repeat_check == 0:
                self.check[key] = value
            else:
                self.check2[key] = value
            self.storage.add_key((key, value))
        for key, value in self.check.items():
            self.storage._remove_key(key)

        for key, value in self.check.items():
            self.assertEqual(self.storage._get_key(key), 'no such key')
        for key, value in self.check2.items():
            self.assertEqual(self.storage._get_key(key), value)